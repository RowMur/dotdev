---
import type { GetStaticPaths, MarkdownInstance } from "astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Section from "../../../components/Section.astro";
import Post from "../../../features/Post.astro";

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await Astro.glob("../*.md");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
};

type Props = {
  posts: MarkdownInstance<Record<string, any>>[];
};

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout title={`Posts Tagged "${tag}"`}>
  <Section>
    {posts.map((post) => <Post post={post} />)}
  </Section>
</BaseLayout>
